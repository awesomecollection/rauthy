name: Build and Push Docker Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    # services:
    #   postgres:
    #     image: postgres:15
    #     env:
    #       POSTGRES_USER: rauthy
    #       POSTGRES_PASSWORD: 123SuperSafe
    #       POSTGRES_DB: rauthy
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd "pg_isready -U postgres"
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-arch support)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y just libpq-dev
          # cargo install sqlx-cli --no-default-features --features postgres
      
      # - name: Ensure Docker network exists
      #   run: docker network create rauthy-dev || true

      - name: List Docker networks (debugging step)
        run: docker network ls
      
      - name: Fix Cargo registry permissions
        run: |
          mkdir -p /home/runner/.cargo/registry
          sudo chown -R 1001:118 /home/runner/.cargo/registry

      # - name: Wait for PostgreSQL to be ready
      #   run: |
      #     for i in {1..10}; do
      #       if PGPASSWORD=123SuperSafe psql -h localhost -U rauthy -d rauthy -c '\q'; then
      #         echo "PostgreSQL is ready!"
      #         exit 0
      #       fi
      #       echo "Waiting for PostgreSQL..."
      #       sleep 3
      #     done
      #     echo "PostgreSQL did not become ready in time" >&2
      #     exit 1

      # - name: Debug PostgreSQL Status
      #   run: |
      #     docker ps
      #     netstat -tulnp | grep 5432 || echo "PostgreSQL is not listening!"

      # - name: Debug PostgreSQL Connection
      #   run: PGPASSWORD=123SuperSafe psql -h localhost -U rauthy -d rauthy -c '\dt'

      # - name: Build Builder Image
      #   run: just build-builder  # Uses values from Justfile

      - name: Build Application Image
        run: just build