import{g as h}from"./helpers.DMpx17S8.js";import{s as u}from"./helpers.mrWtKrwW.js";const c={"Content-Type":"application/json",Accept:"application/json"};function n(){return{"csrf-token":h(),"Content-Type":"application/json",Accept:"application/json"}}async function e(t){return t.status===403&&(await t.json()).error==="MfaRequired"&&(console.error("MFA is required for a rauthy admin account"),await u(3e3),window.location.reload()),(t.status===401||t.status===403)&&window.location.reload(),t}async function d(){const t=await fetch("/auth/v1/clients",{method:"GET",headers:c});return await e(t)}async function f(t){const a=await fetch("/auth/v1/clients",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function w(t){const a=await fetch(`/auth/v1/clients/${t.id}`,{method:"PUT",headers:n(),body:JSON.stringify(t)});return await e(a)}async function y(t){const a=await fetch(`/auth/v1/clients/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function m(t){const a=await fetch(`/auth/v1/clients/${t}/colors`,{method:"GET",headers:c});return await e(a)}async function E(t,a){const s=await fetch(`/auth/v1/clients/${t}/colors`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function T(t){const a=await fetch(`/auth/v1/clients/${t}/colors`,{method:"DELETE",headers:n()});return await e(a)}async function v(t,a){const s=new FormData;s.append("logo",a);const r=await fetch(`/auth/v1/clients/${t}/logo`,{method:"PUT",headers:{"csrf-token":h()},body:s});return await e(r)}async function $(t){const a=await fetch(`/auth/v1/clients/${t}/logo`,{method:"DELETE",headers:n()});return await e(a)}async function l(t){const a=await fetch(`/auth/v1/clients/${t}/secret`,{method:"POST",headers:n()});return await e(a)}async function p(t){const a=await fetch(`/auth/v1/clients/${t}/secret`,{method:"PUT",headers:n()});return await e(a)}async function g(){const t=await fetch("/auth/v1/groups",{method:"GET",headers:c});return await e(t)}async function O(t){const a=await fetch("/auth/v1/groups",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function S(t,a){const s=await fetch(`/auth/v1/groups/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function b(t){const a=await fetch(`/auth/v1/groups/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function P(t){const a=await fetch("/auth/v1/users/request_reset",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function J(){const t=await fetch("/auth/v1/oidc/rotate_jwk",{method:"POST",headers:n()});return await e(t)}async function N(){const t=await fetch("/auth/v1/sessions",{method:"GET",headers:c});return await e(t)}async function G(t,a,s,r){let o=`/auth/v1/sessions?page_size=${t}`;a&&(o=`${o}&offset=${a}`),r&&(o=`${o}&backwards=${r}`),s&&(o=`${o}&continuation_token=${s}`);const i=await fetch(o,{method:"GET",headers:c});return await e(i)}async function D(){const t=await fetch("/auth/v1/sessions",{method:"DELETE",headers:n()});return await e(t)}async function L(t){const a=await fetch(`/auth/v1/sessions/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function U(){const t=await fetch("/auth/v1/users",{method:"GET",headers:c});return await e(t)}async function k(t,a,s,r){let o=`/auth/v1/users?page_size=${t}`;a&&(o=`${o}&offset=${a}`),r&&(o=`${o}&backwards=${r}`),s&&(o=`${o}&continuation_token=${s}`);const i=await fetch(o,{method:"GET",headers:c});return await e(i)}async function j(t){const a=await fetch("/auth/v1/users",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function _(t,a){const s=await fetch(`/auth/v1/users/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function q(t){const a=await fetch(`/auth/v1/users/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function A(){const t=await fetch("/auth/v1/users/attr",{method:"GET",headers:c});return await e(t)}async function x(t){const a=await fetch("/auth/v1/users/attr",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function z(t,a){const s=await fetch(`/auth/v1/users/attr/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function C(t){const a=await fetch(`/auth/v1/users/attr/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function F(t){const a=await fetch(`/auth/v1/users/${t}/attr`,{method:"GET",headers:c});return await e(a)}async function M(t,a){const s=await fetch(`/auth/v1/users/${t}/attr`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function B(){const t=await fetch("/auth/v1/roles",{method:"GET",headers:c});return await e(t)}async function H(t){const a=await fetch("/auth/v1/roles",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function I(t,a){const s=await fetch(`/auth/v1/roles/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function K(t){const a=await fetch(`/auth/v1/roles/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function R(){const t=await fetch("/auth/v1/scopes",{method:"GET",headers:c});return await e(t)}async function Q(t){const a=await fetch("/auth/v1/scopes",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function V(t,a){const s=await fetch(`/auth/v1/scopes/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function W(t){const a=await fetch(`/auth/v1/scopes/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function X(t,a,s){const r=await fetch(`/auth/v1/search?ty=${t}&idx=${a}&q=${s}`,{method:"GET",headers:c});return await e(r)}export{M as A,j as B,U as C,k as D,w as E,l as F,p as G,y as H,m as I,E as J,T as K,$ as L,v as M,f as N,d as O,G as a,x as b,z as c,D as d,C as e,A as f,N as g,O as h,S as i,b as j,g as k,I as l,K as m,H as n,B as o,J as p,Q as q,V as r,W as s,R as t,X as u,_ as v,P as w,q as x,L as y,F as z};
