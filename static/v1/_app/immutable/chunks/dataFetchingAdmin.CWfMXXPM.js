import{g as i}from"./helpers.BweJi6s8.js";import{s as u}from"./helpers.mrWtKrwW.js";const o={"Content-Type":"application/json",Accept:"application/json"};function n(){return{"csrf-token":i(),"Content-Type":"application/json",Accept:"application/json"}}async function e(t){return t.status===403&&(await t.json()).error==="MfaRequired"&&(console.error("MFA is required for a rauthy admin account"),await u(3e3),window.location.reload()),(t.status===401||t.status===403)&&window.location.reload(),t}async function d(){const t=await fetch("/auth/v1/clients",{method:"GET",headers:o});return await e(t)}async function f(t){const a=await fetch("/auth/v1/clients",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function w(t){const a=await fetch(`/auth/v1/clients/${t.id}`,{method:"PUT",headers:n(),body:JSON.stringify(t)});return await e(a)}async function y(t){const a=await fetch(`/auth/v1/clients/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function m(t){const a=await fetch(`/auth/v1/clients/${t}/colors`,{method:"GET",headers:o});return await e(a)}async function T(t,a){const s=await fetch(`/auth/v1/clients/${t}/colors`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function v(t){const a=await fetch(`/auth/v1/clients/${t}/colors`,{method:"DELETE",headers:n()});return await e(a)}async function E(t,a){const s=new FormData;s.append("logo",a);const r=await fetch(`/auth/v1/clients/${t}/logo`,{method:"PUT",headers:{"csrf-token":i()},body:s});return await e(r)}async function l(t){const a=await fetch(`/auth/v1/clients/${t}/logo`,{method:"DELETE",headers:n()});return await e(a)}async function $(t){const a=await fetch(`/auth/v1/clients/${t}/secret`,{method:"POST",headers:n()});return await e(a)}async function p(t){const a=await fetch(`/auth/v1/clients/${t}/secret`,{method:"PUT",headers:n()});return await e(a)}async function g(){const t=await fetch("/auth/v1/groups",{method:"GET",headers:o});return await e(t)}async function O(t){const a=await fetch("/auth/v1/groups",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function S(t,a){const s=await fetch(`/auth/v1/groups/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function P(t){const a=await fetch(`/auth/v1/groups/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function b(t){const a=await fetch("/auth/v1/users/request_reset",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function J(){const t=await fetch("/auth/v1/oidc/rotate_jwk",{method:"POST",headers:n()});return await e(t)}async function N(t){const a=await fetch(`/auth/v1/sessions/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function D(){const t=await fetch("/auth/v1/users",{method:"GET",headers:o});return await e(t)}async function G(t,a,s,r){let c=`/auth/v1/users?page_size=${t}`;a&&(c=`${c}&offset=${a}`),r&&(c=`${c}&backwards=${r}`),s&&(c=`${c}&continuation_token=${s}`);const h=await fetch(c,{method:"GET",headers:o});return await e(h)}async function L(t){const a=await fetch("/auth/v1/users",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function U(t,a){const s=await fetch(`/auth/v1/users/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function j(t){const a=await fetch(`/auth/v1/users/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function k(){const t=await fetch("/auth/v1/users/attr",{method:"GET",headers:o});return await e(t)}async function q(t){const a=await fetch("/auth/v1/users/attr",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function A(t,a){const s=await fetch(`/auth/v1/users/attr/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function _(t){const a=await fetch(`/auth/v1/users/attr/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function C(t){const a=await fetch(`/auth/v1/users/${t}/attr`,{method:"GET",headers:o});return await e(a)}async function F(t,a){const s=await fetch(`/auth/v1/users/${t}/attr`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function x(){const t=await fetch("/auth/v1/roles",{method:"GET",headers:o});return await e(t)}async function z(t){const a=await fetch("/auth/v1/roles",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function M(t,a){const s=await fetch(`/auth/v1/roles/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function B(t){const a=await fetch(`/auth/v1/roles/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function H(){const t=await fetch("/auth/v1/scopes",{method:"GET",headers:o});return await e(t)}async function I(t){const a=await fetch("/auth/v1/scopes",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function K(t,a){const s=await fetch(`/auth/v1/scopes/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function R(t){const a=await fetch(`/auth/v1/scopes/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function Q(t,a,s){const r=await fetch(`/auth/v1/search?ty=${t}&idx=${a}&q=${s}`,{method:"GET",headers:o});return await e(r)}export{G as A,w as B,$ as C,p as D,y as E,m as F,T as G,v as H,l as I,E as J,f as K,d as L,q as a,A as b,O as c,_ as d,S as e,P as f,k as g,g as h,M as i,B as j,z as k,x as l,I as m,K as n,R as o,J as p,H as q,Q as r,U as s,b as t,j as u,N as v,C as w,F as x,L as y,D as z};
