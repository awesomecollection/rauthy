import{g as h}from"./helpers.BV-akmwW.js";import{s as u}from"./helpers.mrWtKrwW.js";const c={"Content-Type":"application/json",Accept:"application/json"};function n(){return{"csrf-token":h(),"Content-Type":"application/json",Accept:"application/json"}}async function e(t){return t.status===403&&(await t.json()).error==="MfaRequired"&&(console.error("MFA is required for a rauthy admin account"),await u(3e3),window.location.reload()),(t.status===401||t.status===403)&&window.location.reload(),t}async function d(){const t=await fetch("/auth/v1/clients",{method:"GET",headers:c});return await e(t)}async function f(t){const a=await fetch("/auth/v1/clients",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function w(t){const a=await fetch(`/auth/v1/clients/${t.id}`,{method:"PUT",headers:n(),body:JSON.stringify(t)});return await e(a)}async function y(t){const a=await fetch(`/auth/v1/clients/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function m(t){const a=await fetch(`/auth/v1/clients/${t}/colors`,{method:"GET",headers:c});return await e(a)}async function v(t,a){const s=await fetch(`/auth/v1/clients/${t}/colors`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function T(t){const a=await fetch(`/auth/v1/clients/${t}/colors`,{method:"DELETE",headers:n()});return await e(a)}async function E(t,a){const s=new FormData;s.append("logo",a);const r=await fetch(`/auth/v1/clients/${t}/logo`,{method:"PUT",headers:{"csrf-token":h()},body:s});return await e(r)}async function $(t){const a=await fetch(`/auth/v1/clients/${t}/logo`,{method:"DELETE",headers:n()});return await e(a)}async function p(t){const a=await fetch(`/auth/v1/clients/${t}/secret`,{method:"POST",headers:n()});return await e(a)}async function l(t){const a=await fetch(`/auth/v1/clients/${t}/secret`,{method:"PUT",headers:n()});return await e(a)}async function O(){const t=await fetch("/auth/v1/groups",{method:"GET",headers:c});return await e(t)}async function S(t){const a=await fetch("/auth/v1/groups",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function g(t,a){const s=await fetch(`/auth/v1/groups/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function b(t){const a=await fetch(`/auth/v1/groups/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function P(t){const a=await fetch("/auth/v1/users/request_reset",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function J(){return await fetch("/auth/v1/providers",{method:"POST",headers:n()})}async function N(t){return await fetch("/auth/v1/providers/create",{method:"POST",headers:n(),body:JSON.stringify(t)})}async function k(t,a){return await fetch(`/auth/v1/providers/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)})}async function D(t){return await fetch(`/auth/v1/providers/${t}`,{method:"DELETE",headers:n()})}async function G(t){return await fetch(`/auth/v1/providers/${t}/delete_safe`,{method:"GET",headers:n()})}async function U(t,a){const s=new FormData;s.append("logo",a);const r=await fetch(`/auth/v1/providers/${t}/img`,{method:"PUT",headers:{"csrf-token":h()},body:s});return await e(r)}async function L(t){return await fetch("/auth/v1/providers/lookup",{method:"POST",headers:n(),body:JSON.stringify(t)})}async function _(){const t=await fetch("/auth/v1/oidc/rotate_jwk",{method:"POST",headers:n()});return await e(t)}async function j(){const t=await fetch("/auth/v1/sessions",{method:"GET",headers:c});return await e(t)}async function q(t,a,s,r){let o=`/auth/v1/sessions?page_size=${t}`;a&&(o=`${o}&offset=${a}`),r&&(o=`${o}&backwards=${r}`),s&&(o=`${o}&continuation_token=${s}`);const i=await fetch(o,{method:"GET",headers:c});return await e(i)}async function A(){const t=await fetch("/auth/v1/sessions",{method:"DELETE",headers:n()});return await e(t)}async function F(t){const a=await fetch(`/auth/v1/sessions/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function x(){const t=await fetch("/auth/v1/users",{method:"GET",headers:c});return await e(t)}async function z(t,a,s,r){let o=`/auth/v1/users?page_size=${t}`;a&&(o=`${o}&offset=${a}`),r&&(o=`${o}&backwards=${r}`),s&&(o=`${o}&continuation_token=${s}`);const i=await fetch(o,{method:"GET",headers:c});return await e(i)}async function C(t){const a=await fetch("/auth/v1/users",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function M(t,a){const s=await fetch(`/auth/v1/users/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function R(t){const a=await fetch(`/auth/v1/users/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function B(){const t=await fetch("/auth/v1/users/attr",{method:"GET",headers:c});return await e(t)}async function H(t){const a=await fetch("/auth/v1/users/attr",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function I(t,a){const s=await fetch(`/auth/v1/users/attr/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function K(t){const a=await fetch(`/auth/v1/users/attr/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function Q(t){const a=await fetch(`/auth/v1/users/${t}/attr`,{method:"GET",headers:c});return await e(a)}async function V(t,a){const s=await fetch(`/auth/v1/users/${t}/attr`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function W(){const t=await fetch("/auth/v1/api_keys",{method:"GET",headers:c});return await e(t)}async function X(t){const a=await fetch("/auth/v1/api_keys",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function Y(t){const a=await fetch(`/auth/v1/api_keys/${t.name}`,{method:"PUT",headers:n(),body:JSON.stringify(t)});return await e(a)}async function Z(t){const a=await fetch(`/auth/v1/api_keys/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function tt(t){const a=await fetch(`/auth/v1/api_keys/${t}/secret`,{method:"PUT",headers:n()});return await e(a)}async function at(){const t=await fetch("/auth/v1/blacklist",{method:"GET",headers:c});return await e(t)}async function et(t){const a=await fetch("/auth/v1/blacklist",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function nt(t){const a=await fetch(`/auth/v1/blacklist/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function st(){const t=await fetch("/auth/v1/roles",{method:"GET",headers:c});return await e(t)}async function ot(t){const a=await fetch("/auth/v1/roles",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function ct(t,a){const s=await fetch(`/auth/v1/roles/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function rt(t){const a=await fetch(`/auth/v1/roles/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function it(){const t=await fetch("/auth/v1/scopes",{method:"GET",headers:c});return await e(t)}async function ht(t){const a=await fetch("/auth/v1/scopes",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function ut(t,a){const s=await fetch(`/auth/v1/scopes/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function dt(t){const a=await fetch(`/auth/v1/scopes/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function ft(t,a,s){const r=await fetch(`/auth/v1/search?ty=${t}&idx=${a}&q=${s}`,{method:"GET",headers:c});return await e(r)}export{E as $,U as A,k as B,G as C,D,J as E,X as F,Y as G,Z as H,tt as I,W as J,M as K,P as L,R as M,F as N,Q as O,V as P,C as Q,x as R,z as S,w as T,p as U,l as V,y as W,m as X,v as Y,T as Z,$ as _,_ as a,f as a0,d as a1,j as b,A as c,nt as d,q as e,ft as f,at as g,H as h,I as i,K as j,B as k,S as l,g as m,b as n,O as o,et as p,ct as q,rt as r,ot as s,st as t,ht as u,ut as v,dt as w,it as x,L as y,N as z};
