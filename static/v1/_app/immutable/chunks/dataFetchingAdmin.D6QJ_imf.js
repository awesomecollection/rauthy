import{g as h}from"./helpers.kNqlWGzE.js";import{s as u}from"./helpers.mrWtKrwW.js";const o={"Content-Type":"application/json",Accept:"application/json"};function n(){return{"csrf-token":h(),"Content-Type":"application/json",Accept:"application/json"}}async function e(t){return t.status===403&&(await t.json()).error==="MfaRequired"&&(console.error("MFA is required for a rauthy admin account"),await u(3e3),window.location.reload()),(t.status===401||t.status===403)&&window.location.reload(),t}async function d(){const t=await fetch("/auth/v1/clients",{method:"GET",headers:o});return await e(t)}async function f(t){const a=await fetch("/auth/v1/clients",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function w(t){const a=await fetch(`/auth/v1/clients/${t.id}`,{method:"PUT",headers:n(),body:JSON.stringify(t)});return await e(a)}async function y(t){const a=await fetch(`/auth/v1/clients/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function m(t){const a=await fetch(`/auth/v1/clients/${t}/colors`,{method:"GET",headers:o});return await e(a)}async function T(t,a){const s=await fetch(`/auth/v1/clients/${t}/colors`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function E(t){const a=await fetch(`/auth/v1/clients/${t}/colors`,{method:"DELETE",headers:n()});return await e(a)}async function v(t,a){const s=new FormData;s.append("logo",a);const i=await fetch(`/auth/v1/clients/${t}/logo`,{method:"PUT",headers:{"csrf-token":h()},body:s});return await e(i)}async function $(t){const a=await fetch(`/auth/v1/clients/${t}/logo`,{method:"DELETE",headers:n()});return await e(a)}async function l(t){const a=await fetch(`/auth/v1/clients/${t}/secret`,{method:"POST",headers:n()});return await e(a)}async function p(t){const a=await fetch(`/auth/v1/clients/${t}/secret`,{method:"PUT",headers:n()});return await e(a)}async function O(){const t=await fetch("/auth/v1/groups",{method:"GET",headers:o});return await e(t)}async function S(t){const a=await fetch("/auth/v1/groups",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function g(t,a){const s=await fetch(`/auth/v1/groups/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function b(t){const a=await fetch(`/auth/v1/groups/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function P(t){const a=await fetch("/auth/v1/users/request_reset",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function J(){const t=await fetch("/auth/v1/oidc/rotate_jwk",{method:"POST",headers:n()});return await e(t)}async function N(){const t=await fetch("/auth/v1/sessions",{method:"GET",headers:o});return await e(t)}async function k(t,a,s,i){let c=`/auth/v1/sessions?page_size=${t}`;a&&(c=`${c}&offset=${a}`),i&&(c=`${c}&backwards=${i}`),s&&(c=`${c}&continuation_token=${s}`);const r=await fetch(c,{method:"GET",headers:o});return await e(r)}async function G(){const t=await fetch("/auth/v1/sessions",{method:"DELETE",headers:n()});return await e(t)}async function D(t){const a=await fetch(`/auth/v1/sessions/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function U(){const t=await fetch("/auth/v1/users",{method:"GET",headers:o});return await e(t)}async function L(t,a,s,i){let c=`/auth/v1/users?page_size=${t}`;a&&(c=`${c}&offset=${a}`),i&&(c=`${c}&backwards=${i}`),s&&(c=`${c}&continuation_token=${s}`);const r=await fetch(c,{method:"GET",headers:o});return await e(r)}async function _(t){const a=await fetch("/auth/v1/users",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function j(t,a){const s=await fetch(`/auth/v1/users/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function q(t){const a=await fetch(`/auth/v1/users/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function A(){const t=await fetch("/auth/v1/users/attr",{method:"GET",headers:o});return await e(t)}async function x(t){const a=await fetch("/auth/v1/users/attr",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function z(t,a){const s=await fetch(`/auth/v1/users/attr/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function C(t){const a=await fetch(`/auth/v1/users/attr/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function F(t){const a=await fetch(`/auth/v1/users/${t}/attr`,{method:"GET",headers:o});return await e(a)}async function M(t,a){const s=await fetch(`/auth/v1/users/${t}/attr`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function R(){const t=await fetch("/auth/v1/api_keys",{method:"GET",headers:o});return await e(t)}async function B(t){const a=await fetch("/auth/v1/api_keys",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function H(t){const a=await fetch(`/auth/v1/api_keys/${t.name}`,{method:"PUT",headers:n(),body:JSON.stringify(t)});return await e(a)}async function I(t){const a=await fetch(`/auth/v1/api_keys/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function K(t){const a=await fetch(`/auth/v1/api_keys/${t}/secret`,{method:"PUT",headers:n()});return await e(a)}async function Q(){const t=await fetch("/auth/v1/blacklist",{method:"GET",headers:o});return await e(t)}async function V(t){const a=await fetch("/auth/v1/blacklist",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function W(t){const a=await fetch(`/auth/v1/blacklist/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function X(){const t=await fetch("/auth/v1/roles",{method:"GET",headers:o});return await e(t)}async function Y(t){const a=await fetch("/auth/v1/roles",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function Z(t,a){const s=await fetch(`/auth/v1/roles/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function tt(t){const a=await fetch(`/auth/v1/roles/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function at(){const t=await fetch("/auth/v1/scopes",{method:"GET",headers:o});return await e(t)}async function et(t){const a=await fetch("/auth/v1/scopes",{method:"POST",headers:n(),body:JSON.stringify(t)});return await e(a)}async function nt(t,a){const s=await fetch(`/auth/v1/scopes/${t}`,{method:"PUT",headers:n(),body:JSON.stringify(a)});return await e(s)}async function st(t){const a=await fetch(`/auth/v1/scopes/${t}`,{method:"DELETE",headers:n()});return await e(a)}async function ct(t,a,s){const i=await fetch(`/auth/v1/search?ty=${t}&idx=${a}&q=${s}`,{method:"GET",headers:o});return await e(i)}export{I as A,K as B,R as C,j as D,P as E,q as F,D as G,F as H,M as I,_ as J,U as K,L,w as M,l as N,p as O,y as P,m as Q,T as R,E as S,$ as T,v as U,f as V,d as W,J as a,N as b,G as c,W as d,k as e,x as f,Q as g,z as h,C as i,A as j,S as k,g as l,b as m,O as n,Z as o,V as p,tt as q,Y as r,X as s,et as t,nt as u,st as v,at as w,ct as x,B as y,H as z};
